// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: internal/adapters/rpc/pb/linecode_svc.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManchesterOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Decoded           string  `protobuf:"bytes,2,opt,name=decoded,proto3" json:"decoded,omitempty"`
	Encoded           string  `protobuf:"bytes,3,opt,name=encoded,proto3" json:"encoded,omitempty"`
	DecodedPulseWidth float64 `protobuf:"fixed64,4,opt,name=decodedPulseWidth,proto3" json:"decodedPulseWidth,omitempty"`
	EncodedPulseWidth float64 `protobuf:"fixed64,5,opt,name=encodedPulseWidth,proto3" json:"encodedPulseWidth,omitempty"`
	Unit              string  `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *ManchesterOut) Reset() {
	*x = ManchesterOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManchesterOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManchesterOut) ProtoMessage() {}

func (x *ManchesterOut) ProtoReflect() protoreflect.Message {
	mi := &file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManchesterOut.ProtoReflect.Descriptor instead.
func (*ManchesterOut) Descriptor() ([]byte, []int) {
	return file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescGZIP(), []int{0}
}

func (x *ManchesterOut) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ManchesterOut) GetDecoded() string {
	if x != nil {
		return x.Decoded
	}
	return ""
}

func (x *ManchesterOut) GetEncoded() string {
	if x != nil {
		return x.Encoded
	}
	return ""
}

func (x *ManchesterOut) GetDecodedPulseWidth() float64 {
	if x != nil {
		return x.DecodedPulseWidth
	}
	return 0
}

func (x *ManchesterOut) GetEncodedPulseWidth() float64 {
	if x != nil {
		return x.EncodedPulseWidth
	}
	return 0
}

func (x *ManchesterOut) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type ManchesterEncoderIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decoded           string  `protobuf:"bytes,1,opt,name=decoded,proto3" json:"decoded,omitempty"`
	DecodedPulseWidth float64 `protobuf:"fixed64,2,opt,name=decodedPulseWidth,proto3" json:"decodedPulseWidth,omitempty"`
	Unit              string  `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *ManchesterEncoderIn) Reset() {
	*x = ManchesterEncoderIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManchesterEncoderIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManchesterEncoderIn) ProtoMessage() {}

func (x *ManchesterEncoderIn) ProtoReflect() protoreflect.Message {
	mi := &file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManchesterEncoderIn.ProtoReflect.Descriptor instead.
func (*ManchesterEncoderIn) Descriptor() ([]byte, []int) {
	return file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescGZIP(), []int{1}
}

func (x *ManchesterEncoderIn) GetDecoded() string {
	if x != nil {
		return x.Decoded
	}
	return ""
}

func (x *ManchesterEncoderIn) GetDecodedPulseWidth() float64 {
	if x != nil {
		return x.DecodedPulseWidth
	}
	return 0
}

func (x *ManchesterEncoderIn) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type ManchesterDecoderIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoded           string  `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	EncodedPulseWidth float64 `protobuf:"fixed64,2,opt,name=encodedPulseWidth,proto3" json:"encodedPulseWidth,omitempty"`
	Unit              string  `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *ManchesterDecoderIn) Reset() {
	*x = ManchesterDecoderIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManchesterDecoderIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManchesterDecoderIn) ProtoMessage() {}

func (x *ManchesterDecoderIn) ProtoReflect() protoreflect.Message {
	mi := &file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManchesterDecoderIn.ProtoReflect.Descriptor instead.
func (*ManchesterDecoderIn) Descriptor() ([]byte, []int) {
	return file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescGZIP(), []int{2}
}

func (x *ManchesterDecoderIn) GetEncoded() string {
	if x != nil {
		return x.Encoded
	}
	return ""
}

func (x *ManchesterDecoderIn) GetEncodedPulseWidth() float64 {
	if x != nil {
		return x.EncodedPulseWidth
	}
	return 0
}

func (x *ManchesterDecoderIn) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

var File_internal_adapters_rpc_pb_linecode_svc_proto protoreflect.FileDescriptor

var file_internal_adapters_rpc_pb_linecode_svc_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xc3, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x73, 0x65,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x50, 0x75, 0x6c, 0x73, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x71, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x73,
	0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x71, 0x0a, 0x13, 0x4d, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x8f, 0x01,
	0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x10, 0x4d,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x10, 0x4d, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescOnce sync.Once
	file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescData = file_internal_adapters_rpc_pb_linecode_svc_proto_rawDesc
)

func file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescGZIP() []byte {
	file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescOnce.Do(func() {
		file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescData)
	})
	return file_internal_adapters_rpc_pb_linecode_svc_proto_rawDescData
}

var file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_internal_adapters_rpc_pb_linecode_svc_proto_goTypes = []interface{}{
	(*ManchesterOut)(nil),       // 0: pb.ManchesterOut
	(*ManchesterEncoderIn)(nil), // 1: pb.ManchesterEncoderIn
	(*ManchesterDecoderIn)(nil), // 2: pb.ManchesterDecoderIn
}
var file_internal_adapters_rpc_pb_linecode_svc_proto_depIdxs = []int32{
	1, // 0: pb.LineCoder.ManchesterEncode:input_type -> pb.ManchesterEncoderIn
	2, // 1: pb.LineCoder.ManchesterDecode:input_type -> pb.ManchesterDecoderIn
	0, // 2: pb.LineCoder.ManchesterEncode:output_type -> pb.ManchesterOut
	0, // 3: pb.LineCoder.ManchesterDecode:output_type -> pb.ManchesterOut
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_adapters_rpc_pb_linecode_svc_proto_init() }
func file_internal_adapters_rpc_pb_linecode_svc_proto_init() {
	if File_internal_adapters_rpc_pb_linecode_svc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManchesterOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManchesterEncoderIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManchesterDecoderIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_adapters_rpc_pb_linecode_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_adapters_rpc_pb_linecode_svc_proto_goTypes,
		DependencyIndexes: file_internal_adapters_rpc_pb_linecode_svc_proto_depIdxs,
		MessageInfos:      file_internal_adapters_rpc_pb_linecode_svc_proto_msgTypes,
	}.Build()
	File_internal_adapters_rpc_pb_linecode_svc_proto = out.File
	file_internal_adapters_rpc_pb_linecode_svc_proto_rawDesc = nil
	file_internal_adapters_rpc_pb_linecode_svc_proto_goTypes = nil
	file_internal_adapters_rpc_pb_linecode_svc_proto_depIdxs = nil
}
